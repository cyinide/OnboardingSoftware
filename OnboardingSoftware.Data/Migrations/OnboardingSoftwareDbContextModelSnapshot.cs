// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnboardingSoftware.Data;

namespace OnboardingSoftware.Data.Migrations
{
    [DbContext(typeof(OnboardingSoftwareDbContext))]
    partial class OnboardingSoftwareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AplikantVjestina", b =>
                {
                    b.Property<int>("AplikantiID")
                        .HasColumnType("int");

                    b.Property<int>("VjestineID")
                        .HasColumnType("int");

                    b.HasKey("AplikantiID", "VjestineID");

                    b.HasIndex("VjestineID");

                    b.ToTable("AplikantVjestina");
                });

            modelBuilder.Entity("OnboardingSoftware.Core.Models.Aplikant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatumRodjenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industrija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JeVerifikovan")
                        .HasColumnType("bit");

                    b.Property<string>("LokacijaZaposlenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MjestoRodjenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StatusZaposlenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrenutnaPozicija")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Aplikanti");
                });

            modelBuilder.Entity("OnboardingSoftware.Core.Models.Vjestina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vjestine");
                });

            modelBuilder.Entity("AplikantVjestina", b =>
                {
                    b.HasOne("OnboardingSoftware.Core.Models.Aplikant", null)
                        .WithMany()
                        .HasForeignKey("AplikantiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnboardingSoftware.Core.Models.Vjestina", null)
                        .WithMany()
                        .HasForeignKey("VjestineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
